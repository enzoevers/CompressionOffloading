name: Pull Request Benchmark Workflow
on:
  pull_request:
    types: [opened, synchronize , reopened , labeled]
    paths:
      - ".github/workflows/*"
      - "Scripts/*"
      - "**/CMakeLists.txt"
      - "**.c"
      - "**.cpp"
      - "**.h"
      - "**.hpp"

jobs:

#========================================
# Checks
#========================================

  check_formatting:
    runs-on: ubuntu-22.04
    name: Check Formatting
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: |
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository 'deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-18 main'
          sudo add-apt-repository 'deb-src http://apt.llvm.org/jammy/ llvm-toolchain-jammy-18 main'
          sudo apt update
          sudo apt install -y clang-format-18
          python -u Scripts/CheckFormattingAll_c_h_cpp_hpp.py --ClangFormatVersion '-18'

#========================================
# Target Ubuntu - Host Ubuntu
#========================================

  target_ubuntu_host_ubuntu:
    needs: check_formatting
    permissions:
      pull-requests: write
    uses: ./.github/workflows/build-test-run-reusable-workflow.yaml
    with:
      runner: 'ubuntu-22.04'
      host-platform: 'ubuntu'
      target-platform: 'host'

#========================================
# Target Windows - Host Windows
#========================================

  target_windows_host_windows:
    needs: check_formatting
    permissions:
      pull-requests: write
    uses: ./.github/workflows/build-test-run-reusable-workflow.yaml
    with:
      runner: 'windows-2022'
      host-platform: 'windows'
      target-platform: 'host'

#========================================
# Target Zynq - Host Ubuntu
#========================================

# The cross-compiler can not be found in the Ubuntu runner, but it can be found when cross-compiling on a local Ubuntu desktop (VM)
  # build_target_zynq_host_ubuntu:
  #   needs: check_formatting
  #   permissions:
  #     pull-requests: write
  #   uses: ./.github/workflows/build-test-run-reusable-workflow.yaml
  #   with:
  #     runner: 'ubuntu-22.04'
  #     host-platform: 'ubuntu'
  #     target-platform: 'zynq'


#========================================
# Target Zynq - Host Windows
#========================================

  build_target_zynq_host_windows:
    needs: check_formatting
    permissions:
      pull-requests: write
    uses: ./.github/workflows/build-test-run-reusable-workflow.yaml
    with:
      runner: 'windows-2022'
      host-platform: 'windows'
      target-platform: 'zynq'

# TODO: For the below two jobs, appropriate cross-compilers for Mac (x86_64 and ARM) need to be added in ZyboEmbeddedLinux\CrossCompilers\aach32

#========================================
# Target Zynq - Host Mac(x86_64)
#========================================

# The cross-compiler is currently not compatible with Mac(x86_64) 
  # target_zynq_host_macx8664:
  #   needs: check_formatting
  #   permissions:
  #     pull-requests: write
  #   uses: ./.github/workflows/build-test-run-reusable-workflow.yaml
  #   with:
  #     runner: 'macos-13'
  #     host-platform: 'mac(x86_64)'
  #     target-platform: 'zynq'

#========================================
# Target Zynq - Host Mac(ARM)
#========================================

# Expected to fail due to to cross-compiler not compiled for Mac(ARM)
  # target_zynq_host_macarm:
  #   needs: check_formatting
  #   permissions:
  #     pull-requests: write
  #   uses: ./.github/workflows/build-test-run-reusable-workflow.yaml
  #   with:
  #     runner: 'macos-14'
  #     host-platform: 'mac(ARM)'
  #     target-platform: 'zynq'
